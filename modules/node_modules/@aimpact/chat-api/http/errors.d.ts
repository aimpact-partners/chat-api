/************
Processor: ts
************/

import * as __beyond_dep_ns_0 from '@beyond-js/response/main';
// generator.ts
declare namespace ns_0 {
  import HTTPErrorManager = ns_1.HTTPErrorManager;
  export enum ErrorCodes {
    internalError = 500,
    invalidParameters = 10500,
    userNotValid = 10501,
    invalidToken = 10502,
  }
  export class ErrorGenerator {
    static internalError(log: string, exc?: Error): HTTPErrorManager;
    static invalidParameters(parameters: string[]): HTTPErrorManager;
    static invalidToken(): HTTPErrorManager;
    static userNotValid(): HTTPErrorManager;
  }
}


// manager.ts
declare namespace ns_1 {
  import ErrorManager = __beyond_dep_ns_0.ErrorManager;
  export class HTTPErrorManager extends ErrorManager {
    get is(): 'chat-api-http-error';
  }
}


export import ErrorCodes = ns_0.ErrorCodes;
export import ErrorGenerator = ns_0.ErrorGenerator;
export import HTTPErrorManager = ns_1.HTTPErrorManager;

export declare const hmr: {on: (event: string, listener: any) => void, off: (event: string, listener: any) => void };